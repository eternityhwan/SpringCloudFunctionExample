spring:
  port: 8080
  cloud:
    function:
      scan:
        packages: com.osckorea.springcloudfunctionexample.config
    stream:
      kafka:
        binder:
          brokers: localhost:9092   # LOCALHOST:9092로 지정되어있는 KAFKA 브로커를 사용한다는 뜻
          configuration:
            value:
              serializer: org.apache.kafka.common.serialization.StringSerializer
        bindings:
          basicProducer-out-0:
            destination: exam
            contentType: text/plain
          basicConsumer-in-0:
            destination: exam
            contentType: text/plain
      
 # kafka 디펜던시 사용시 설정
      # kafka:
    # Kafka 서버에 초기 offset이 없거나, 서버에 현재 offset이 더 이상 존재하지 않을 경우 수행할 작업을 설정
    # latest: 가장 최근에 생산된 메시지로 offeset reset
    # earliest: 가장 오래된 메시지로 offeset reset
    # none: offset 정보가 없으면 Exception 발생
    # 데이터를 받아올 때, key/value를 역직렬화
    # JSON 데이터를 받아올 것이라면 JsonDeserializer
  #  bootstrap-servers: localhost:9092
   # consumer:
    #  group-id: exam
     # auto-offset-reset: earliest
      #key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #value-serializer: org.apache.kafka.common.serialization.StringSerializer
    #producer:
      # producer bootstrap servers가 따로 존재하면 설정
      # bootstrap-servers: 3.34.97.97:9092
      # 데이터를 보낼 때, key/value를 직렬화
      # JSON 데이터를 보낼 것이라면 JsonDeserializer
     # key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #value-serializer: org.apache.kafka.common.serialization.StringSerializer

application:
  name: Spring-Cloud-Function-sample
